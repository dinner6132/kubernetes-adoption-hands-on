apiVersion: v1
kind: Service
metadata:
  name: nginx
  labels:
    app: nginx
spec:
  ports:
    - port: 80
  selector:
    app: nginx
    tier: frontend
  type: LoadBalancer
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-conf
data:
  nginx.conf:  |
     user  nginx;
     worker_processes  1;

     error_log  /var/www/nginx/error.log warn;
     pid        /var/www/nginx/nginx.pid;

     events {
         worker_connections  1024;
     }

     http {
         log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                           '$status $body_bytes_sent "$http_referer" '
                           '"$http_user_agent" "$http_x_forwarded_for"';

         # Path to access.log & error.log
         access_log /var/www/nginx/access.log  main;
         error_log /var/www/nginx/error.log  warn;

         sendfile        on;
         keepalive_timeout  65;
         gzip  on;

         upstream backend {
             # must match the target service name
             server wordpress.user-24:80;
         }

         server {
             listen       80;
             location / {
                 # $http_host is the host name that users seen on the browser URL
                 # and it equals to `HTTP_HOST` request header.
                 proxy_set_header Host $http_host;

                 # You have to change this according to your setup.
                 proxy_pass http://wordpress.user-24;

                 # Modify `Location` of 301 or 302 HTTP response, so
                 # that the browser will follow the correct location.
                 proxy_redirect ~^http://[^/]*/(.*) http://$http_host/$1;
             }
         }
     }
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: ng-pv-claim
  labels:
    app: nginx
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx
  labels:
    app: nginx
spec:
  selector:
    matchLabels:
      app: nginx
      tier: frontend
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: nginx
        tier: frontend
    spec:
      containers:
      - image: nginx
        name: nginx
        ports:
        - containerPort: 80
          name: nginx
        volumeMounts:
        - name: nginx-persistent-storage
          mountPath: /var/www/nginx/html
        - name: nginx-config
          mountPath: /etc/nginx/nginx.conf
          subPath: nginx.conf
          readOnly: true
          
      volumes:
      - name: nginx-persistent-storage
        persistentVolumeClaim:
          claimName: ng-pv-claim
      - name: nginx-config
        configMap:
          name: nginx-conf

